
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;
import java.util.UUID;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Gamomusic1388
 */
public class SeatsForm extends javax.swing.JFrame {

    /**
     * Creates new form SeatsForm
     */
    static int fare,f;
    static String str;
    static String st;
    static String D_Date;
    static int tno;
    static HashSet<Integer> check_ticket = new HashSet<>();
    static HashSet<Integer> check_pid = new HashSet<>();
    static int seatoriginal;
    
    //String wallet;
    public SeatsForm() {
        initComponents();
        //totalfare.setVisible(false);
    }
    public SeatsForm(String s,int fare,String s1,String date) {
        initComponents();
        str=s;
        st=s1;
        this.fare=fare;
        D_Date=date;
        
        System.out.println("Fare:"+fare);
        Update_table();
        get_seats();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        back = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        seat = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        book = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        totalfare = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        wallet = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        back.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        back.setText("back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Available Trains:");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table);

        seat.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        seat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select", "1", "2", "3", "4" }));
        seat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Number of seats:");

        book.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        book.setText("Book");
        book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Total Fare:-");

        totalfare.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Wallet Balance:");

        wallet.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1021, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(book, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(212, 212, 212)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(wallet, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                            .addComponent(totalfare, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(380, 380, 380)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(seat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(343, 343, 343))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(totalfare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))
                                    .addGap(46, 46, 46)
                                    .addComponent(wallet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(24, 24, 24)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(book, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(back, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
   private void get_seats() 
   {
       try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388");
            Statement stmt=con.createStatement();
            String sql="Select seats_Avail from train where Train_No='"+tno+"'";
            ResultSet rs=stmt.executeQuery(sql);
            if(rs.next()){
                 seatoriginal=rs.getInt(1);
                
            }
       }catch(SQLException e){
           JOptionPane.showMessageDialog(null,e);
       } catch (ClassNotFoundException ex) {
            Logger.getLogger(SeatsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
           
   }
    private  void Update_table(){
        try{
            
            String s="";
            if(this.str.equals("KerelaJunc")){
                s="Delhi_Kerela";
                System.out.println("kerela"+s);
            }else if(this.str.equals("JammuTawi")){
                s="Delhi_Jammu";
                System.out.println("jammu"+s);
            }else if(this.str.equals("JaipurJunc")){
                s="Delhi_Jaipur";
                System.out.println("jaipur"+s);
            }else if(this.str.equals("Goa")){
                s="Delhi_Goa";
                System.out.println("goa"+s);
            }
           
            String sql="Select * from train where Train_Name ='"+s+"'";
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388"); 
       PreparedStatement ps=con.prepareStatement(sql);
       ResultSet rs=ps.executeQuery();
       table.setModel(DbUtils.resultSetToTableModel(rs));
       tno=(int)table.getValueAt(0,0);
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
            
        }
    }
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
    this.setVisible(false);
    BookTickets book = new BookTickets();
    book.setVisible(true);
    }//GEN-LAST:event_backActionPerformed

    private void seatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatActionPerformed
        seat.setSelectedItem(seat.getSelectedItem());
        f=this.fare;
        if(seat.getSelectedItem().equals("1")){
          f=f;
          System.out.println("one seat"+f);
       }else if(seat.getSelectedItem().equals("2")){
           f=f*2;
           System.out.println("two seat"+f);
       }else if(seat.getSelectedItem().equals("3")){
           f=f*3;
           System.out.println("three seat"+f);
       }else if(seat.getSelectedItem().equals("4")){
           f=f*4;
           System.out.println("four seat"+f);
       }
       totalfare.setVisible(true);
       totalfare.setText(""+f);
       String s="";
       try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388");
            Statement stmt=con.createStatement();
            String sql="Select Wallet from user where UserName='"+login.name+"'";
            ResultSet rs=stmt.executeQuery(sql);
           
            if(rs.next()){
                s=rs.getString(1);
               
                wallet.setText(s);
                if(Integer.parseInt(totalfare.getText())>Integer.parseInt(s) && seatoriginal <Integer.parseInt((String)seat.getSelectedItem()))
                {
                    totalfare.setText("");
                    JOptionPane.showMessageDialog(null,"Insufficent Balance and seat");
                }
               
                
            }else{
                JOptionPane.showMessageDialog(null,"Login Failed Incoreect username or password");
            }
            con.close();
        }catch(SQLException e){
            System.out.println(e);
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(login.class.getName()).log(Level.SEVERE, null, ex);
        }
       
                    
       System.out.println(this.st);
       
    }//GEN-LAST:event_seatActionPerformed
    public ArrayList<Integer> returnTablenames() throws SQLException{
       ArrayList<Integer> arr=new ArrayList<>();
       String returnUser="select TicketID from paymentdetails";
       Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388"); 
       PreparedStatement ps=con.prepareStatement(returnUser);
       ResultSet rs=ps.executeQuery();
       while(rs.next()){
           arr.add(rs.getInt(1));
       }
       return arr;
        
    }
    private void bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookActionPerformed
       try{
            String sql2="Update user set Wallet ='"+(Integer.parseInt(wallet.getText())-f)+"' where UserName='"+this.st+"'";
            Connection con2=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388");
            Statement stmt1=con2.createStatement();
            PreparedStatement st1=con2.prepareStatement(sql2);
            int a1= st1.executeUpdate();
                    if(a1>0){
                        JOptionPane.showMessageDialog(null,"Updated wallet Successfully...");
                    }
                    String sql3="Update train set seats_Avail ='"+(seatoriginal-Integer.parseInt((String)seat.getSelectedItem()))+"' where Train_No='"+tno+"'";
            Connection con3=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388");
            Statement stmt2=con3.createStatement();
            PreparedStatement st2=con3.prepareStatement(sql3);
            int a2= st2.executeUpdate();
                    if(a2>0){
                        JOptionPane.showMessageDialog(null,"UPdated seat Successfully...");
                    }
           java.util.Date date=new java.util.Date(this.D_Date);
           java.sql.Date sqldate=new java.sql.Date(date.getDate());
           //Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con1=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388");
            Statement stmt=con1.createStatement();
            PreparedStatement st=con1.prepareStatement("insert into paymentdetails(PayID,TicketID,Train_No,Date,Time,Amount,Balance,UserName,seat_booked)values(?,?,?,?,?,?,?,?,?)");

            
            //Generating random pid 
         
           
           
            
            //Generating random ticketID
           
            
            
          
            
          
           
            //Connection connnn=DriverManager.getConnection("jdbc:mysql://localhost:3306/railway_enquiry","root","Nikhil@1388");
           // Statement stmt1111=connnn.createStatement();
            //PreparedStatement st1111=connnn.prepareStatement("insert into login(UserName,Password)values(?,?)");
            ArrayList<Integer> arr=returnTablenames();
            int countticketID=0;
            
            Random randi = new Random();
            int randiii = randi.nextInt(100)+1;
            if(!arr.contains(randiii))
            {
                arr.add(randiii);
                
            }
            else
            {
                randiii = randi.nextInt(100)+1;
              while(!arr.contains(randiii))
              {
                  randiii = randi.nextInt(100)+1;
                  if(arr.contains(randiii))
                  {
                      continue;
                  }
                  else
                  {
                      arr.add(randiii);
                  }
              }
            }
                   
          
            
            
            int r1 = randi.nextInt(10000)+1;
            if(!arr.contains(r1))
            {
                arr.add(r1);
                
            }
            else
            {
                r1 = randi.nextInt(10000)+1;
              while(!arr.contains(r1))
              {
                  r1 = randi.nextInt(10000)+1;
                  if(arr.contains(r1))
                  {
                      continue;
                  }
                  else
                  {
                      arr.add(r1);
                  }
              }
                    
                
            }
            
            
            
            
            
            Object ob=table.getModel().getValueAt(0,0);
            Integer i3=(Integer)ob;
            
           
            System.out.println(i3);
                 st.setInt(1,r1);
                    st.setInt(2,randiii);
                    st.setInt(3,i3);
                    st.setString(4, D_Date);
                    st.setString(5,java.time.LocalTime.now().toString());
                    st.setInt(6, fare);
                    st.setInt(7, Integer.parseInt(wallet.getText()));
                    st.setString(8,this.st);
                    st.setInt(9, Integer.parseInt((String)seat.getSelectedItem()));
                    int a= st.executeUpdate();
                    if(a>0){
                        JOptionPane.showMessageDialog(null,"Register Successfully...");
                    }
                } catch (SQLException ex) {
            Logger.getLogger(SeatsForm.class.getName()).log(Level.SEVERE, null, ex);
           
            
        } 
                   
                    
               
           
         
       
        JOptionPane.showMessageDialog(null,"Ticket Booked and payment deducted Successfully.. see the payment History for details");
        this.setVisible(false);
        WelcomePage wel=new WelcomePage(this.st);
        wel.setVisible(true);
    }//GEN-LAST:event_bookActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SeatsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SeatsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SeatsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SeatsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SeatsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton book;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> seat;
    private javax.swing.JTable table;
    private javax.swing.JTextField totalfare;
    private javax.swing.JTextField wallet;
    // End of variables declaration//GEN-END:variables
}
